/* Question: display all lowercase alphabets using loops ? */
#include <stdio.h>

int main() {
    char ch = 'a';

    printf("Lowercase English Alphabets:\n");
    while(ch <= 'z') {
        printf("%c ", ch);
        ch++;
    }
    printf("\n");

    return 0;
}


/* Question: print numbers from 1 to 10 using loops? */
#include <stdio.h>

int main() {
    int i;
    for (i = 1; i <= 10; i++) {
        printf("%d ", i);
    }
    printf("\n");
    return 0;
}


/* Question: How can we find the Fibonacci series up to n terms in C? */
#include <stdio.h>

void print_fibonacci(int n) {
    int a = 0, b = 1, next;

    for (int i = 0; i < n; i++) {
        if (i == 0) {
            printf("%d ", a);
        } else if (i == 1) {
            printf("%d ", b);
        } else {
            next = a + b;
            a = b;
            b = next;
            printf("%d ", next);
        }
    }
}

int main() {
    int n;
    printf("Enter the number of terms: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("Invalid input. Please enter a positive integer.\n");
    } else {
        print_fibonacci(n);
    }

    return 0;
}



/* Question: sort the given array using bubblesort? */
#include <stdio.h>
void bubble_sort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    int arr[5] = {5, 3, 1, 4, 2};

    bubble_sort(arr, 5);

    for (int i = 0; i < 5; i++) {
        printf("%d ", arr[i]);
    }

    printf("\n");

    return 0;
}



/* Question: print star pattern ? */
#include <stdio.h>

int main() {
    int i, j, rows;

    printf("Enter the number of rows: ");
    scanf("%d", &rows);

    for (i = 1; i <= rows; ++i) {
        for (j = 1; j <= rows - i; ++j) {
            printf("  ");
        }

        for (j = 1; j <= 2 * i - 1; ++j) {
            printf("* ");
        }

        printf("\n");
    }

    return 0;
}


/* Question: sum of array using dynamic memory allocation and pointers ? */
#include<stdio.h>
int main()
{
  int *p,n,i,s=0;
  printf("enter the size of array\n");
  scanf("%d",&n);
  p=(int*)malloc(n*sizeof(int));
  printf("enter elememts\n");
  for(i=0;i<n;i++)
  {
    scanf("%d",p+i);
    }
    for(i=0;i<n;i++)
    {
     s=s+*(p+i);
     }
     printf("the sum of array are %d",s);
     free(p);
     }

/* Question: matrix arithmetic ? */
#include <stdio.h>

#define ROWS 2
#define COLS 2

void addMatrix(int mat1[ROWS][COLS], int mat2[ROWS][COLS], int result[ROWS][COLS]) {
    for(int i = 0; i < ROWS; i++) {
        for(int j = 0; j < COLS; j++) {
            result[i][j] = mat1[i][j] + mat2[i][j];
        }
    }
}


/* Question: matrix arithmetic ? */
int main() {
    int mat1[ROWS][COLS] = {{1, 2}, {3, 4}};
    int mat2[ROWS][COLS] = {{5, 6}, {7, 8}};
    int result[ROWS][COLS];
    addMatrix(mat1, mat2, result);
    for(int i = 0; i < ROWS; i++) {
        for(int j = 0; j < COLS; j++) {
            printf("%d ", result[i][j]);
        }
        printf("\n");
    }
    return 0;
}


/* Question: matrix multiplication ? */
#include <stdio.h>

void multiply_matrices(int mat1[][3], int mat2[][3], int res[][3], int r1, int c1, int r2, int c2) {
    for (int i = 0; i < r1; i++) {
        for (int j = 0; j < c2; j++) {
            res[i][j] = 0;
            for (int k = 0; k < c1; k++) {
                res[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}

int main() {
    int mat1[2][3] = {{1, 2, 3}, {4, 5, 6}};
    int mat2[3][2] = {{7, 8}, {9, 10}, {11, 12}};
    int res[2][2];

    multiply_matrices(mat1, mat2, res, 2, 3, 3, 2);

    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            printf("%d ", res[i][j]);
        }
        printf("\n");
    }

    return 0;
}

/* Question: How can we check if a number is prime or not in C? */
#include <stdio.h>

int main() {
    int n = 17, i, P = 1;
    for (i = 2; i <= n / 2; i++) {
        if (n % i == 0) {
            P = 0;
            break;
        }
    }
    if (p == 1)
        printf("%d is a prime number\n", n);
    else
        printf("%d is not a prime number\n", n);
    return 0;
}


/* Question: dynamic memory allocation*/
#include <stdio.h>
#include <stdlib.h>

int main() {
    int *ptr;
    ptr = (int *)malloc(5 * sizeof(int));
    if(ptr == NULL) {
        printf("Memory allocation failed\n");
        return 1;
    }
    for(int i = 0; i < 5; i++) {
        ptr[i] = i + 1;
    }
    for(int i = 0; i < 5; i++) {
        printf("%d ", ptr[i]);
    }
    free(ptr);
    return 0;
}


/* Question: basic structue code*/
#include <stdio.h>

struct Student {
    int roll_no;
    char name[20];
    float marks;
};

int main() {
    struct Student s1 = {1, "John", 85.5};

    printf("Roll No: %d\n", s1.roll_no);
    printf("Name: %s\n", s1.name);
    printf("Marks: %.1f\n", s1.marks);

 return 0;
}

 /* Question: print 10 natural numbers uisng loops*/  
#include <stdio.h>

int main() {
    int i;
    for (i = 1; i <= 10; i++) {
        printf("%d ", i);
    }
    printf("\n");
    return 0;
}

 /* Question: print fist 10 odd numbers uisng loops*/  
#include <stdio.h>
#include <stdio.h>

int main() {
    int i = 1, count = 10;
    while (count > 0) {
        printf("%d ", i);
        i += 2;
        count--;
    }
    printf("\n");
    return 0;
}

 /* Question: print fist 10 even numbers uisng loops*/
#include <stdio.h>

int main() {
    int i = 2, count = 10;
    do {
        printf("%d ", i);
        i += 2;
        count--;
    } while (count > 0);
    printf("\n");
    return 0;
}


 /* Question: matrix addition*/
#include <stdio.h>

int main() {
    int m, n, c, d, first[10][10], second[10][10], sum[10][10];

    printf("Enter the number of rows and columns of Array(2D)\n");
    scanf("%d%d", &m, &n);

    printf("Enter the elements of first Array\n");
    for (c = 0; c < m; c++)
        for (d = 0; d < n; d++)
            scanf("%d", &first[c][d]);

    printf("Enter the elements of second Array\n");
    for (c = 0; c < m; c++)
        for (d = 0 ; d < n; d++)
            scanf("%d", &second[c][d]);

    printf("Sum of Arrays:\n");
    for (c = 0; c < m; c++) {
        for (d = 0 ; d < n; d++) {
            sum[c][d] = first[c][d] + second[c][d];
            printf("%d ", sum[c][d]);
        }
        printf("\n");
    }

    return 0;
}


/* Question: transpose of a matrix*/
#include <stdio.h>

void transpose(int mat[10][10], int m, int n) {
    int trans[10][10];
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            trans[j][i] = mat[i][j];
        }
    }
    printf("Transpose of the matrix is:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            printf("%d ", trans[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int mat[10][10], m, n;
    printf("Enter the number of rows and columns of the matrix\n");
    scanf("%d%d", &m, &n);
    printf("Enter the elements of the matrix\n");
    for (int i = 0; i < m; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &mat[i][j]);
        }
    }
    transpose(mat, m, n);
    return 0;
}


/* Question: determinant of a matrix*/
#include <stdio.h>
#include <math.h>

double determinant(int mat[10][10], int n) {
    double det = 0;
    if (n == 2) {
        return (mat[0][0] * mat[1][1] - mat[0][1] * mat[1][0]);
    }
    int sign = 1;
    for (int i = 0; i < n; i++) {
        double sub_det = determinant(mat, n - 1);
        det += sign * mat[0][i] * sub_det;
        sign *= -1;
    }
    return det;
}

int main() {
    int mat[10][10], n;
    printf("Enter the number of rows and columns of the matrix\n");
    scanf("%d", &n);
    printf("Enter the elements of the matrix\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &mat[i][j]);
        }
    }
    double det = determinant(mat, n);
    printf("Determinant of the matrix is %.2f\n", det);
    return 0;
}


/* Question: Area of circle*/
#include <stdio.h>
#define PI 3.14159

double area(double radius) {
    return PI * radius * radius;
}

int main() {
    double r;
    printf("Enter the radius of the circle: ");
    scanf("%lf", &r);
    printf("Area of the circle = %.2f\n", area(r));
    return 0;
}



/* Question: GCD of two given numbers*/
#include <stdio.h>

int gcd(int a, int b) {
    if (b == 0)
        return a;
    else
        return gcd(b, a % b);
}

int main() {
    int a, b;
    printf("Enter two numbers: ");
    scanf("%d%d", &a, &b);
    printf("GCD of %d and %d = %d\n", a, b, gcd(a, b));
    return 0;
}

/* Question: Program to find the sum of digits of a number:*/
#include <stdio.h>
int sum_of_digits(int n) {
    if (n == 0)
        return 0;
    else
        return (n % 10 + sum_of_digits(n / 10));
}

int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("Sum of digits of %d = %d\n", num, sum_of_digits(num));
    return 0;
}

/* Question: Program to find the reverse of a number::*/
#include <stdio.h>
int reverse(int n) {
    if (n == 0)
        return 0;
    else
        return (n % 10 * (int)pow(10, (int)log10(n)) + reverse(n / 10));
}

int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("Reverse of %d = %d\n", num, reverse(num));
    return 0;
}

/* Question: Program to find the factorial of a number using recursion::*/
#include <stdio.h>

int factorial(int n) {
    if (n == 0)
        return 1;
    else
        return n * factorial(n - 1);
}

int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("Factorial of %d = %d\n", num, factorial(num));
    return 0;
}


/* Question: Program to find the area of a rectangle::*/
#include <stdio.h>

double area(double length, double width) {
    return length * width;
}

int main() {
    double l, w;
    printf("Enter the length and width of the rectangle: ");
    scanf("%lf%lf", &l, &w);
    printf("Area of the rectangle = %.2f\n", area(l, w));
    return 0;
}



/* Question:Program to find the reverse of a string:*/
#include <stdio.h>
#include <string.h>

void reverse(char *str) {
    int len = strlen(str);
    for (int i = 0; i < len / 2; i++) {
        char temp = str[i];
        str[i] = str[len - i - 1];
        str[len - i - 1] = temp;
    }
}

int main() {
    char str[100];
    printf("Enter a string: ");
    scanf("%s", str);
    reverse(str);
    printf("Reversed string: %s\n", str);
    return 0;
}



/* Question:Program to find the factorial of a number using dynamic memory allocation::*/
#include <stdio.h>
#include <stdlib.h>

int factorial(int n) {
    if (n == 0)
        return 1;
    else
        return n * factorial(n - 1);
}

int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    int *fact = (int *)malloc((num + 1) * sizeof(int));
    fact[0] = 1;
    for (int i = 1; i <= num; i++) {
        fact[i] = i * fact[i - 1];
    }
    printf("Factorial of %d = %d\n", num, fact[num]);
    free(fact);
    return 0;
}



/* Question:Program to find the maximum and minimum elements in an array::*/
#include <stdio.h>

void find_max_min(int arr[], int n, int *max, int *min) {
    *max = arr[0];
    *min = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > *max) {
            *max = arr[i];
        }
        if (arr[i] < *min) {
            *min = arr[i];
        }
    }
}

int main() {
    int arr[10], n, max, min;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    printf("Enter the elements of the array: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    find_max_min(arr, n, &max, &min);
    printf("Maximum element in the array = %d\n", max);
    printf("Minimum element in the array = %d\n", min);
    return 0;
}



/* Question:Program to find the number of occurrences of an element in an array:::*/
#include <stdio.h>

int count(int arr[], int n, int x) {
    int count = 0;
    for (int i = 0; i < n; i++) {
        if (arr[i] == x) {
            count++;
        }
    }
    return count;
}

int main() {
    int arr[10], n, x;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    printf("Enter the elements of the array: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    printf("Enter the element to find its occurrences: ");
    scanf("%d", &x);
    printf("%d occurs %d times in the array\n", x, count(arr, n, x));
    return 0;
}



/* Question:Program to find the second largest element in an array:*/
#include <stdio.h>

int second_largest(int arr[], int n) {
    int max1 = arr[0], max2 = arr[1];
    if (max2 > max1) {
        int temp = max1;
        max1 = max2;
        max2 = temp;
    }
    for (int i = 2; i < n; i++) {
        if (arr[i] > max1) {
            max2 = max1;
            max1 = arr[i];
        } else if (arr[i] > max2 && arr[i] != max1) {
            max2 = arr[i];
        }
    }
    if (max2 == -1) {
        printf("There is no second largest element\n");
    } else {
        printf("Second largest element in the array = %d\n", max2);
    }
    return 0;
}

int main() {
    int arr[10], n;
    printf("Enter the number of elements in the array: ");
    scanf("%d", &n);
    printf("Enter the elements of the array: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    second_largest(arr, n);
    return 0;
}

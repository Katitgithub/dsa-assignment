/* Question: display all lowercase alphabets using loops ? */
#include <stdio.h>

int main() {
    char ch = 'a';

    printf("Lowercase English Alphabets:\n");
    while(ch <= 'z') {
        printf("%c ", ch);
        ch++;
    }
    printf("\n");

    return 0;
}


/* Question: print numbers from 1 to 10 using loops? */
#include <stdio.h>

int main() {
    int i;
    for (i = 1; i <= 10; i++) {
        printf("%d ", i);
    }
    printf("\n");
    return 0;
}


/* Question: How can we find the Fibonacci series up to n terms in C? */
#include <stdio.h>

void print_fibonacci(int n) {
    int a = 0, b = 1, next;

    for (int i = 0; i < n; i++) {
        if (i == 0) {
            printf("%d ", a);
        } else if (i == 1) {
            printf("%d ", b);
        } else {
            next = a + b;
            a = b;
            b = next;
            printf("%d ", next);
        }
    }
}

int main() {
    int n;
    printf("Enter the number of terms: ");
    scanf("%d", &n);

    if (n <= 0) {
        printf("Invalid input. Please enter a positive integer.\n");
    } else {
        print_fibonacci(n);
    }

    return 0;
}



/* Question: sort the given array using bubblesort? */
#include <stdio.h>
void bubble_sort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    int arr[5] = {5, 3, 1, 4, 2};

    bubble_sort(arr, 5);

    for (int i = 0; i < 5; i++) {
        printf("%d ", arr[i]);
    }

    printf("\n");

    return 0;
}



/* Question: print star pattern ? */
#include <stdio.h>

int main() {
    int i, j, rows;

    printf("Enter the number of rows: ");
    scanf("%d", &rows);

    for (i = 1; i <= rows; ++i) {
        for (j = 1; j <= rows - i; ++j) {
            printf("  ");
        }

        for (j = 1; j <= 2 * i - 1; ++j) {
            printf("* ");
        }

        printf("\n");
    }

    return 0;
}


/* Question: sum of array using dynamic memory allocation and pointers ? */
#include<stdio.h>
int main()
{
  int *p,n,i,s=0;
  printf("enter the size of array\n");
  scanf("%d",&n);
  p=(int*)malloc(n*sizeof(int));
  printf("enter elememts\n");
  for(i=0;i<n;i++)
  {
    scanf("%d",p+i);
    }
    for(i=0;i<n;i++)
    {
     s=s+*(p+i);
     }
     printf("the sum of array are %d",s);
     free(p);
     }


#include <stdio.h>

#define ROWS 2
#define COLS 2

void addMatrix(int mat1[ROWS][COLS], int mat2[ROWS][COLS], int result[ROWS][COLS]) {
    for(int i = 0; i < ROWS; i++) {
        for(int j = 0; j < COLS; j++) {
            result[i][j] = mat1[i][j] + mat2[i][j];
        }
    }
}


/* Question: matrix arithmetic ? */
int main() {
    int mat1[ROWS][COLS] = {{1, 2}, {3, 4}};
    int mat2[ROWS][COLS] = {{5, 6}, {7, 8}};
    int result[ROWS][COLS];
    addMatrix(mat1, mat2, result);
    for(int i = 0; i < ROWS; i++) {
        for(int j = 0; j < COLS; j++) {
            printf("%d ", result[i][j]);
        }
        printf("\n");
    }
    return 0;
}


/* Question: matrix multiplication ? */
#include <stdio.h>

void multiply_matrices(int mat1[][3], int mat2[][3], int res[][3], int r1, int c1, int r2, int c2) {
    for (int i = 0; i < r1; i++) {
        for (int j = 0; j < c2; j++) {
            res[i][j] = 0;
            for (int k = 0; k < c1; k++) {
                res[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}

int main() {
    int mat1[2][3] = {{1, 2, 3}, {4, 5, 6}};
    int mat2[3][2] = {{7, 8}, {9, 10}, {11, 12}};
    int res[2][2];

    multiply_matrices(mat1, mat2, res, 2, 3, 3, 2);

    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            printf("%d ", res[i][j]);
        }
        printf("\n");
    }

    return 0;
}

/* structure array ? */
#include <stdio.h>
struct Student {
    int roll_no;
    char name[20];
    float marks;
};

int main() {
    struct Student students[3] = {{1, "John", 85.5}, {2, "Jane", 90.0}, {3, "Bob", 75.5}};

    for (int i = 0; i < 3; i++) {
        printf("Roll No: %d\n", students[i].roll_no);
        printf("Name
